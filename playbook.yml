---
- name: Check prerequisites
  hosts: all
  gather_facts: false
  tasks:
    - name: Fail if HOST_PUBLIC_IP is not set
      ansible.builtin.fail:
        msg: "The environment variable HOST_PUBLIC_IP must be set before running this playbook."
      when: host_public_ip is not defined or host_public_ip == ""

- name: Install docker
  hosts: all
  become: true
  roles:
    - geerlingguy.docker

- name: Setup K3s Cluster
  hosts: k3s_cluster
  become: true
  gather_facts: true
  roles:
    - k3s_cluster

- name: Set kubeconfig path fact on localhost
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Set kubeconfig path for use on localhost
      ansible.builtin.set_fact:
        k3s_kubeconfig_path: "{{ hostvars[groups['k3s_cluster'][0]].k3s_kubeconfig_path }}"

- name: Install Kubernetes apps
  hosts: localhost
  become: false
  environment:
    KUBECONFIG: "{{ k3s_kubeconfig_path }}"
  roles:
    - install_k8s_apps

- name: Trust Harbor CA in containerd
  hosts: all
  become: true
  tasks:
    - name: Get Traefik service info (delegated to localhost)
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: kube-system
        name: traefik
      register: traefik_svc
      delegate_to: localhost
      become: false

    - name: Set traefik_cluster_ip fact for this host
      ansible.builtin.set_fact:
        traefik_cluster_ip: "{{ traefik_svc.resources[0].spec.clusterIP }}"

    - name: Ensure harbor_domain is in /etc/hosts pointing to Traefik ClusterIP
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '.*\s+{{ harbor_domain }}$'
        line: "{{ traefik_cluster_ip }} {{ harbor_domain }}"
        state: present
        backup: false

    - name: Get Harbor TLS secret from Kubernetes (delegated, per host)
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ harbor_namespace }}"
        name: "{{ harbor_tls_secret_name }}"
      register: harbor_tls_secret
      delegate_to: localhost
      become: false

    - name: Ensure containerd trust directory for Harbor exists
      ansible.builtin.file:
        path: "/etc/containerd/certs.d/{{ harbor_domain }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Write Harbor certificate to containerd trust store (for self-signed)
      ansible.builtin.copy:
        content: "{{ harbor_tls_secret.resources[0].data['ca.crt'] | b64decode }}"
        dest: "/etc/containerd/certs.d/{{ harbor_domain }}/ca.crt"
        owner: root
        group: root
        mode: '0644'

    - name: Copy Harbor CA to system trust store
      ansible.builtin.copy:
        src: "/etc/containerd/certs.d/{{ harbor_domain }}/ca.crt"
        dest: "/usr/local/share/ca-certificates/harbor.crt"
        owner: root
        group: root
        mode: '0644'
        remote_src: true

    - name: Update system CA certificates
      ansible.builtin.command: update-ca-certificates
      changed_when: false

    - name: Restart containerd to reload trusted CAs
      ansible.builtin.service:
        name: containerd
        state: restarted

- name: Configure firewall
  hosts: all
  become: true
  roles:
    - firewall
