- name: Set main Mailu domain from first enabled project
  ansible.builtin.set_fact:
    mailu_main_domain: >-
      {{ (self_saas_projects | selectattr('mailu.enabled', 'defined') | selectattr('mailu.enabled') | list)[0].domain }}
  when: self_saas_projects | selectattr('mailu.enabled', 'defined') | selectattr('mailu.enabled') | list | length > 0

- name: Set cert-manager issuer and domain logic
  ansible.builtin.set_fact:
    mailu_cert_issuer_name: "{{ 'letsencrypt-prod' if environment_type == 'prod' else 'selfsigned-cluster-issuer' }}"
    mailu_cert_issuer_kind: "ClusterIssuer"

- name: Create self-signed ClusterIssuer for local testing
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: selfsigned-cluster-issuer
      spec:
        selfSigned: {}
  when: environment_type == 'local_test'

- name: Render and apply Mailu cert-manager Certificate for all enabled domains
  ansible.builtin.template:
    src: mailu-certificate.yaml.j2
    dest: "/tmp/mailu-certificate.yaml"
    mode: '0644'
  when: self_saas_projects | selectattr('mailu.enabled', 'defined') | selectattr('mailu.enabled') | list | length > 0

# Avoid hitting Let's Encrypt rate limits: only create the Certificate if it does not already exist
- name: Check if Mailu certificate already exists
  kubernetes.core.k8s_info:
    api_version: cert-manager.io/v1
    kind: Certificate
    namespace: mailu
    name: mailu-certificates
  register: mailu_cert_info
  failed_when: false
  changed_when: false

- name: Apply Mailu cert-manager Certificate manifest
  kubernetes.core.k8s:
    state: present
    src: "/tmp/mailu-certificate.yaml"
  when:
    - self_saas_projects | selectattr('mail.enabled', 'defined') | selectattr('mail.enabled') | list | length > 0
    - mailu_cert_info.resources | length == 0
