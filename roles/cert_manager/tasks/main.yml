- name: Ensure cert-manager namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ cert_manager_namespace }}"
    state: present

- name: Download cert-manager CRDs
  ansible.builtin.get_url:
    url: "{{ cert_manager_crds_url }}"
    dest: "/tmp/cert-manager-crds.yaml"
    mode: '0644'
  register: crd_download

- name: Apply cert-manager CRDs
  kubernetes.core.k8s:
    state: present
    src: "/tmp/cert-manager-crds.yaml"

- name: Add Jetstack Helm repository
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "{{ cert_manager_helm_repo }}"

- name: Install or upgrade cert-manager using Helm
  kubernetes.core.helm:
    name: "{{ cert_manager_release_name }}"
    chart_ref: jetstack/{{ cert_manager_chart_name }}
    chart_version: "{{ cert_manager_chart_version }}"
    release_namespace: "{{ cert_manager_namespace }}"
    create_namespace: false
    values:
      installCRDs: false
    state: present
    wait: true
    timeout: 5m

- name: Create Let's Encrypt Staging ClusterIssuer
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: letsencrypt-account-key
          solvers:
            - http01:
                ingress:
                  class: traefik


- name: Patch CoreDNS to use DNSSEC-validating upstreams
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: coredns
      data:
        Corefile: |
          .:53 {
              errors
              health
              ready
              kubernetes cluster.local in-addr.arpa ip6.arpa {
                  pods insecure
                  fallthrough in-addr.arpa ip6.arpa
              }
              forward . 1.1.1.1 9.9.9.9
              cache 30
              loop
              reload
              loadbalance
          }

- name: Restart CoreDNS to apply changes
  kubernetes.core.k8s:
    api_version: v1
    kind: Pod
    namespace: kube-system
    label_selectors:
      - k8s-app=coredns
    state: absent
    wait: true