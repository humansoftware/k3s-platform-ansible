---
- name: Add Argo CD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: Install Argo CD via Helm
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    create_namespace: true
    state: present
    wait: true
    wait_timeout: "{{ helm_install_timeout }}"
    values:
      imageUpdater:
        enabled: true
      configs:
        repositories:
          harbor:
            type: helm
            enableOCI: "true"
            name: "{{ harbor_hostname }}"
            url: "https://{{ harbor_hostname }}"
            username: "{{ harbor_admin_username }}"
            password: "{{ harbor_admin_password }}"
        params:
          server.insecure: true
        secret:
          argocdServerAdminPassword: "{{ argocd_admin_password | password_hash('bcrypt') }}"
          items:
            token: "{{ github_pat }}"
      notifications:
        notifiers:
          service.webhook.github-status: "{{ lookup('template', 'service_webhook_github_status.yaml.j2') }}"
        templates:
          template.github-status: "{{ lookup('template', 'app_github_status.yaml.j2') }}"
        triggers:
          trigger.on-deployed: "{{ lookup('template', 'triggers/on-deployed.yaml.j2') }}"
          trigger.on-health-degraded: "{{ lookup('template', 'triggers/on-health-degraded.yaml.j2') }}"
          trigger.on-sync-failed: "{{ lookup('template', 'triggers/on-sync-failed.yaml.j2') }}"
          trigger.on-sync-running: "{{ lookup('template', 'triggers/on-sync-running.yaml.j2') }}"
          trigger.on-sync-status-unknown: "{{ lookup('template', 'triggers/on-sync-status-unknown.yaml.j2') }}"
          trigger.on-unknown-sync-status: "{{ lookup('template', 'triggers/on-unknown-sync-status.yaml.j2') }}"
          trigger.on-sync-succeeded: "{{ lookup('template', 'triggers/on-sync-succeeded.yaml.j2') }}"
